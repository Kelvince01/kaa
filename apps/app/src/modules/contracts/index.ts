/**
 * Contract Module Exports
 *
 * This module provides comprehensive contract management functionality
 * including types, services, queries, and state management.
 */

// Export all query hooks
export {
  contractKeys,
  useApproveContractAmendment,
  useArchiveContract,
  useCheckContractOverlaps,
  useContract,
  useContractAuditLogs,
  useContractStats,
  useContracts,
  useContractsByProperty,
  useContractsByTenant,
  useContractsByUnit,
  useContractsDueForRenewal,
  useContractTemplates,
  useCreateContract,
  useCreateContractAmendment,
  useDeleteContract,
  useDeleteContractDocument,
  useDuplicateContract,
  useExpiringContracts,
  useExportContracts,
  useGenerateContractPDF,
  useInvalidateContracts,
  usePrefetchContract,
  useRejectContractAmendment,
  useRenewContract,
  useSendContractForSigning,
  useSendPaymentReminder,
  useSignContract,
  useTerminateContract,
  useUnarchiveContract,
  useUpdateContract,
  useUploadContractDocument,
  useValidateContractData,
} from "./contract.queries";
// Export schema form data types
export type {
  BulkUpdateContractsFormData,
  ContractAmendmentFormData,
  ContractFiltersFormData,
  ContractQueryFormData,
  ContractRenewalFormData,
  ContractSigningFormData,
  ContractTemplateFormData,
  ContractTerminationFormData,
  CreateContractFormData,
  DocumentUploadFormData,
  ExportOptionsFormData,
  UpdateContractFormData,
} from "./contract.schema";

// Export validation schemas and helpers
export {
  baseContractSchema,
  bulkDeleteContractsSchema,
  bulkUpdateContractsSchema,
  commonSchemas,
  contractAmendmentSchema,
  contractFiltersSchema,
  contractQuerySchema,
  contractRenewalSchema,
  contractSigningSchema,
  contractTemplateSchema,
  contractTerminationSchema,
  contractTermSchema,
  createContractSchema,
  depositProtectionSchema,
  documentUploadSchema,
  exportOptionsSchema,
  isValidCurrency,
  isValidDateString,
  isValidEmail,
  isValidObjectId,
  isValidPhoneNumber,
  isValidRentDueDate,
  paymentScheduleSchema,
  renewalOptionsSchema,
  signatureSchema,
  terminationDeductionSchema,
  updateContractSchema,
  validateContractRenewal,
  validateContractSigning,
  validateContractTermination,
  validateCreateContract,
  validateUpdateContract,
  validationMessages,
} from "./contract.schema";
// Export all service functions
export {
  approveContractAmendment,
  archiveContract,
  checkContractOverlaps,
  createContract,
  createContractAmendment,
  deleteContract,
  deleteContractDocument,
  downloadContractPDF,
  duplicateContract,
  exportContracts,
  generateContractPDF,
  getContract,
  getContractAuditLogs,
  getContractStats,
  getContracts,
  getContractsByProperty,
  getContractsByTenant,
  getContractsByUnit,
  getContractsDueForRenewal,
  getContractTemplates,
  getExpiringContracts,
  rejectContractAmendment,
  renewContract,
  sendContractForSigning,
  sendPaymentReminder,
  signContract,
  terminateContract,
  unarchiveContract,
  updateContract,
  uploadContractDocument,
  validateContractData,
} from "./contract.service";
// Export store and selectors
export {
  useActiveFiltersCount,
  useBulkActionLoading,
  useContractFilters,
  useContractForm,
  useContractLoading,
  useContractModal,
  useContractModals,
  useContractQueryParams,
  useContractStore,
  useContractViewMode,
  useContractViewPreferences,
  useCurrentContract,
  useHasSelectedContracts,
  useSelectedContracts,
  useSelectedContractsCount,
} from "./contract.store";
// Export all types
export type {
  ApiResponse,
  Contract,
  ContractAmendment,
  ContractAuditLog,
  ContractData,
  ContractDocument,
  ContractExportOptions,
  ContractFilters,
  ContractListResponse,
  ContractNotificationSettings,
  ContractQueryParams,
  ContractRenewalInput,
  ContractResponse,
  ContractSigningInput,
  ContractStats,
  ContractStatsResponse,
  ContractTemplate,
  ContractTerm,
  ContractTerminationInput,
  CreateContractInput,
  CustomClause,
  DepositProtection,
  Pagination,
  PaymentSchedule,
  RenewalOptions,
  Signature,
  StatusHistoryEntry,
  TerminationInfo,
  UpdateContractInput,
} from "./contract.type";
// Export enums
export { ContractStatus, ContractType } from "./contract.type";

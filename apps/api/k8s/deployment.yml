apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaa-rental-api
  namespace: kaa-rental
  labels:
    app: kaa-rental-api
    component: backend
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kaa-rental-api
  template:
    metadata:
      labels:
        app: kaa-rental-api
        component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: kaa-rental-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: kaa-rental-api
        image: your-registry/kaa-rental-api:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: mongodb-uri
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: jwt-secret
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: jwt-refresh-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: encryption-key
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: sendgrid-api-key
              optional: true
        - name: AFRICASTALKING_API_KEY
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: africastalking-api-key
              optional: true
        - name: MPESA_CONSUMER_KEY
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: mpesa-consumer-key
              optional: true
        - name: MPESA_CONSUMER_SECRET
          valueFrom:
            secretKeyRef:
              name: kaa-rental-secrets
              key: mpesa-consumer-secret
              optional: true
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: kaa-rental-config
              key: redis-url
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: kaa-rental-config
              key: cors-origin
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: kaa-rental-config
              key: log-level
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/system
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kaa-rental-api
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: kaa-rental-api-service
  namespace: kaa-rental
  labels:
    app: kaa-rental-api
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: kaa-rental-api

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kaa-rental-api
  namespace: kaa-rental
  labels:
    app: kaa-rental-api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kaa-rental-api-ingress
  namespace: kaa-rental
  labels:
    app: kaa-rental-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.kaa-rental.com
    secretName: kaa-rental-api-tls
  rules:
  - host: api.kaa-rental.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kaa-rental-api-service
            port:
              number: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kaa-rental-api-pdb
  namespace: kaa-rental
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: kaa-rental-api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: kaa-rental-api-hpa
  namespace: kaa-rental
  labels:
    app: kaa-rental-api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: kaa-rental-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
